#include <bits/stdc++.h>
#include <windows.h>
using namespace std;

int main()
{
    SetConsoleCP(65001);
    SetConsoleOutputCP(65001);
    float x1 = -1;
    float x2 = -1;
    float shag = 0;
    float m;
    float y;
    float eps = 0.0001;
    int n;
    const float Pi = acos(-1);
    float blizkor1, blizkor2;
    int t = 0;
    float a, b, c;
    float fa, fc;
    int extra = 0;
    float p;

    while (x1 == x2 || x1 <= -1 || x2 <= -1)
    {
    cout << "Введите отрезок на оси абсцисс, (x > -1): ";
    cin >> x1 >> x2;

    }
    if (x2 < x1)
    {
        cout << "Вы ввели числа не по возрастанию.Числа заменены местами" << endl;
        m = x1;
        x1 = x2;
        x2 = m;
    }
    while (shag <= 0)
    {
        cout << "Введите шаг ";
        cin >> shag;
        if (shag == 0)
        {
            cout << "Шаг не может быть нулевым." << endl;
        }
        if (shag < 0)
        {
            cout << "Шаг не может быть отрицательным." << endl;
        }
    }
    cout << "Отрезок [" << x1 << "; " << x2 << "] с шагом " << shag << endl;

    if (x1 >= 0 && x2 >= 0)
    {
        n = floor((x2 - x1) / shag) + 1;
    }
    else if (x1 < 0 && x2 >= 0)
    {
        n = floor((abs(x1) + x2) / shag) + 1;
    }
    else
    {
        n = floor((abs(x1) - abs(x2)) / shag) + 1;
    }
    float Arr[n][2];
    int k = 0;
    cout << "┌" << "─────────────" << "┬" << "─────────────" << "┐" << endl;
    cout << "│" << setw(7) << "x" << setw(9) << "│" << setw(7) << "y" << setw(9) << "│" << endl;
    cout << "├" << "─────────────" << "┼" << "─────────────" << "┤" << endl;
    for (float i = x1; i <= x2; i += shag)
    {
        y = log10(2*i)-sin((Pi * i) / 3);
        Arr[k][1] = y;
        Arr[k][0] = i;
        k += 1;
        cout << "│" << setprecision(5) << setw(13) << left << i << "│" << setw(13) << y << "│" << endl;
     if (i + shag > x2)
        {
            cout << "└" << "─────────────" << "┴" << "─────────────" << "┘" << endl;
        }
        else
        {
            cout << "├" << "─────────────" << "┼" << "─────────────" << "┤" << endl;
        }
    }
    for (int i = 0; i < n - 1; i ++)
    {
        if ((Arr[i+1][1] > 0 && Arr[i][1] < 0) || (Arr[i+1][1] < 0 && Arr[i][1] > 0))
        {
            if (t == 0)
            {
                blizkor1 = Arr[i][0];
                blizkor2 = Arr[i+1][0];
                t = 1;
            }
            else
            {
                t = 2;
                extra ++;
            }
        }
    }
    if (t == 1)
    {
        cout << "Корень лежит в пределах отрезка: " << "[" << blizkor1 << "; " << blizkor2 << "]" << endl;
    }
    else if (t == 0)
    {
        cout << "В данном отрезке нет корней." << endl;
        exit(1);
    }
    else
    {
        cout << "Корень лежит в пределах отрезка: " << "[" << blizkor1 << "; " << blizkor2 << "]" << endl;
        cout << "Внимание! Программа нашла ещё " << extra << " корень(ней). ";
        cout << "Но показывать его (их) она, конечно же, не будет. Программа выводит только первый входящий в отрезок корень." << endl;
    }
    a = blizkor1;
    b = blizkor2;
    int iter = 0;
    cout << "┌" << "─────────────" << "┬" << "─────────────" << "┬" << "─────────────" << "┬" << "─────────────" << "┬" << "─────────────" << "┬" << "─────────────" << "┬" << "─────────────" << "┐" << endl;
    cout << "│" << setw(7) << right << "a" << setw(9) << "│" << setw(7) << "b" << setw(9) << "│" << setw(7) << "c" << setw(9) << "│"
    << setw(8) << "b-a" << setw(8) << "│" << setw(9) << "f(a)" << setw(7) << "│" << setw(9) << "f(c)" << setw(7) << "│" << setw(11) << "f(a)*f(c)" << setw(5) << "│" << endl;
    cout << "├" << "─────────────" << "┼" << "─────────────" << "┼" << "─────────────" << "┼" << "─────────────"<< "┼" << "─────────────" << "┼" << "─────────────" << "┼" << "─────────────" << "┤" << endl;
    while (abs(b - a) > eps)
    {
        iter ++;
        c = (a + b) / 2;
        fa = log10(a*2)-sin((Pi * a) / 3);
        fc = log10(c*2)-sin((Pi * c) / 3);
        p = fa * fc;
        cout << "│" << setw(13) << left << a << "│" << setw(13) << b << "│" << setw(13) << c << "│"
        << setw(13) << b-a << "│" << setw(13) << fa << "│" << setw(13) << fc << "│" << setw(13) << product << "│" << endl;
        if (p < 0)
        {
            a = blizkor1;
            b = c;
        }
        else if (p > 0)
        {
            a = c;
        }
        else
        {
            exit(1);
        }
        if (abs(b - a) <= eps)
        {
            cout << "└" << "─────────────" << "┴" << "─────────────" << "┴" << "─────────────" << "┴" << "─────────────"<< "┴" << "─────────────" << "┴" << "─────────────" << "┴" << "─────────────" << "┘" << endl;
        }
        else
        {
            cout << "├" << "─────────────" << "┼" << "─────────────" << "┼" << "─────────────" << "┼" << "─────────────"<< "┼" << "─────────────" << "┼" << "─────────────" << "┼" << "─────────────" << "┤" << endl;
        }
    }
    cout << "Корень = " << c << endl;
    cout << "На операцио уточнения корня с точностью eps = 0.0001 было затрачено " << iter << " итерации(й)." << endl;

    return 0;
}
